@inproceedings{CousotCousot,
    author = {Cousot, Patrick and Cousot, Radhia},
    title = {Abstract Interpretation: A Unified Lattice Model for Static Analysis of Programs by Construction or Approximation of Fixpoints},
    year = {1977},
    isbn = {9781450373500},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/512950.512973},
    doi = {10.1145/512950.512973},
    booktitle = {Proceedings of the 4th ACM SIGACT-SIGPLAN Symposium on Principles of Programming Languages},
    pages = {238–252},
    numpages = {15},
    location = {Los Angeles, California},
    series = {POPL '77}
}

@inproceedings{Dafny,
    author    = {K. Rustan M. Leino},
    editor    = {Edmund M. Clarke and
        Andrei Voronkov},
    title     = {Dafny: An Automatic Program Verifier for Functional Correctness},
    booktitle = {Logic for Programming, Artificial Intelligence, and Reasoning - 16th
        International Conference, LPAR-16, Dakar, Senegal, April 25-May 1,
        2010, Revised Selected Papers},
    series    = {Lecture Notes in Computer Science},
    volume    = {6355},
    pages     = {348--370},
    publisher = {Springer},
    year      = {2010},
    url       = {https://doi.org/10.1007/978-3-642-17511-4\_20},
    doi       = {10.1007/978-3-642-17511-4\_20},
    timestamp = {Tue, 14 May 2019 10:00:55 +0200},
    biburl    = {https://dblp.org/rec/conf/lpar/Leino10.bib},
    bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{10.1145/277650.277732,
    author = {Xi, Hongwei and Pfenning, Frank},
    title = {Eliminating Array Bound Checking through Dependent Types},
    year = {1998},
    isbn = {0897919874},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/277650.277732},
    doi = {10.1145/277650.277732},
    abstract = {We present a type-based approach to eliminating array bound checking and list tag checking by conservatively extending Standard ML with a restricted form of dependent types. This enables the programmer to capture more invariants through types while type-checking remains decidable in theory and can still be performed efficiently in practice. We illustrate our approach through concrete examples and present the result of our preliminary experiments which support support the feasibility and effectiveness of our approach.},
    booktitle = {Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
    pages = {249–257},
    numpages = {9},
    location = {Montreal, Quebec, Canada},
    series = {PLDI '98}
}

@article{EliminatingBoundsChecking,
    author = {Xi, Hongwei and Pfenning, Frank},
    title = {Eliminating Array Bound Checking through Dependent Types},
    year = {1998},
    issue_date = {May 1998},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {33},
    number = {5},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/277652.277732},
    doi = {10.1145/277652.277732},
    abstract = {We present a type-based approach to eliminating array bound checking and list tag checking by conservatively extending Standard ML with a restricted form of dependent types. This enables the programmer to capture more invariants through types while type-checking remains decidable in theory and can still be performed efficiently in practice. We illustrate our approach through concrete examples and present the result of our preliminary experiments which support support the feasibility and effectiveness of our approach.},
    journal = {SIGPLAN Not.},
    month = {may},
    pages = {249–257},
    numpages = {9}
}

@article{InductiveFamilies,
    author = {Dybjer, Peter},
    year = {1994},
    month = {01},
    pages = {440-465},
    title = {Inductive families},
    volume = {6},
    journal = {Formal Aspects of Computing},
    doi = {10.1007/BF01211308}
}

@book{JavaGenerics,
    added-at = {2017-06-17T18:06:29.000+0200},
    address = {Sebastapol},
    author = {Naftalin, Maurice and Wadler, Philip},
    biburl = {https://www.bibsonomy.org/bibtex/204aadf0ea70263dd7c90a113ddfef51d/flint63},
    file = {O'Reilly Product page:http\://www.oreilly.com/catalog/9780596527754/:URL;Amazon Search inside:http\://www.amazon.de/gp/reader/0596527756/:URL},
    groups = {public},
    isbn = {978-0-596-52775-4},
    publisher = {O'Reilly},
    timestamp = {2018-04-16T12:06:13.000+0200},
    title = {Java Generics and Collections},
    url = {https://www.safaribooksonline.com/library/view/java-generics-and/0596527756/},
    username = {flint63},
    year = 2006
}

@inproceedings{LinkedListVerification,
    author = {Lahiri, Shuvendu K. and Qadeer, Shaz},
    title = {Verifying Properties of Well-Founded Linked Lists},
    year = {2006},
    isbn = {1595930272},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1111037.1111048},
    doi = {10.1145/1111037.1111048},
    booktitle = {Conference Record of the 33rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    pages = {115–126},
    numpages = {12},
    keywords = {automated theorem proving, heap abstraction, decision procedure, well-founded linked lists, first-order axiomatization},
    location = {Charleston, South Carolina, USA},
    series = {POPL '06}
}

@article{LinkedListVerification,
    author = {Lahiri, Shuvendu K. and Qadeer, Shaz},
    title = {Verifying Properties of Well-Founded Linked Lists},
    year = {2006},
    issue_date = {January 2006},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {41},
    number = {1},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/1111320.1111048},
    doi = {10.1145/1111320.1111048},
    journal = {SIGPLAN Not.},
    month = {jan},
    pages = {115–126},
    numpages = {12},
    keywords = {first-order axiomatization, decision procedure, heap abstraction, automated theorem proving, well-founded linked lists}
}

@inproceedings{LiquidTypesPLDI08,
    author = {Rondon, Patrick M. and Kawaguci, Ming and Jhala, Ranjit},
    title = {Liquid Types},
    year = {2008},
    isbn = {9781595938602},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/1375581.1375602},
    doi = {10.1145/1375581.1375602},
    booktitle = {Proceedings of the 29th ACM SIGPLAN Conference on Programming Language Design and Implementation},
    pages = {159–169},
    numpages = {11},
    keywords = {hindley-milner, dependent types, type inference, predicate abstraction},
    location = {Tucson, AZ, USA},
    series = {PLDI '08}
}

@article{milner-type-poly,
    added-at = {2010-08-25T08:47:38.000+0200},
    author = {Milner, Robin},
    bibsource = {{DBLP, http://dblp.uni-trier.de}},
    biburl = {https://www.bibsonomy.org/bibtex/25a0cdae9eb537ce9c9a8918789299347/miguel.pagano},
    interhash = {a292429247e7b72602c8d955141e3049},
    intrahash = {5a0cdae9eb537ce9c9a8918789299347},
    journal = {{J. Comput. Syst. Sci.}},
    keywords = {imported},
    number = {{3}},
    pages = {348-375},
    timestamp = {2010-08-25T08:47:45.000+0200},
    title = {{A Theory of Type Polymorphism in Programming}},
    volume = {{17}},
    year = {{1978}}
}

@misc{RoadtoNowhere,
    author  = {Byrne, David},
    title   = {Road to Nowhere},
    year    = {1985},
    address = {Sire Records},
    journal = {Little Creatures},
}

@inproceedings{RefinementTypesForML,
    author = {Freeman, Tim and Pfenning, Frank},
    title = {Refinement Types for ML},
    year = {1991},
    isbn = {0897914287},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/113445.113468},
    doi = {10.1145/113445.113468},
    booktitle = {Proceedings of the ACM SIGPLAN 1991 Conference on Programming Language Design and Implementation},
    pages = {268–277},
    numpages = {10},
    location = {Toronto, Ontario, Canada},
    series = {PLDI '91}
}

@article{Saturn,
    author = {Xie, Yichen and Aiken, Alex},
    title = {Saturn: A Scalable Framework for Error Detection Using Boolean Satisfiability},
    year = {2007},
    issue_date = {May 2007},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {29},
    number = {3},
    issn = {0164-0925},
    url = {https://doi.org/10.1145/1232420.1232423},
    doi = {10.1145/1232420.1232423},
    journal = {ACM Trans. Program. Lang. Syst.},
    month = {may},
    pages = {16–es},
    numpages = {43},
    keywords = {Program analysis, error detection, Boolean satisfiability}
}

@online{ScalaCatsNonEmptyList, 
    title = {Scala Cats - NonEmptyList JavaDoc},
    url={https://www.javadoc.io/doc/org.typelevel/cats-docs_2.13/latest/cats/data/NonEmptyList.html},
    journal={Nonemptylist - Cats-docs_2.13 2.9.0 javadoc}
}

@book{Shapeless,
    title     = "The Type Astronaut's Guide to Shapeless",
    author    = "Gurnell, Dave",
    year      = 2016,
    publisher = "Underscore",
    url       = "https://underscore.io/books/shapeless-guide/"
}

@article{10.1145/565816.503274,
    author = {Ball, Thomas and Rajamani, Sriram K.},
    title = {The SLAM Project: Debugging System Software via Static Analysis},
    year = {2002},
    issue_date = {Jan. 2002},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    volume = {37},
    number = {1},
    issn = {0362-1340},
    url = {https://doi.org/10.1145/565816.503274},
    doi = {10.1145/565816.503274},
    journal = {SIGPLAN Not.},
    month = {jan},
    pages = {1–3},
    numpages = {3}
}

@inproceedings{SlamProject,
    author = {Ball, Thomas and Rajamani, Sriram K.},
    title = {The SLAM Project: Debugging System Software via Static Analysis},
    year = {2002},
    isbn = {1581134509},
    publisher = {Association for Computing Machinery},
    address = {New York, NY, USA},
    url = {https://doi.org/10.1145/503272.503274},
    doi = {10.1145/503272.503274},
    booktitle = {Proceedings of the 29th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
    pages = {1–3},
    numpages = {3},
    location = {Portland, Oregon},
    series = {POPL '02}
}

@inproceedings{TriggerSelection,
    author       = {K. Rustan M. Leino and
        Cl{\'{e}}ment Pit{-}Claudel},
    editor       = {Swarat Chaudhuri and
        Azadeh Farzan},
    title        = {Trigger Selection Strategies to Stabilize Program Verifiers},
    booktitle    = {Computer Aided Verification - 28th International Conference, {CAV}
        2016, Toronto, ON, Canada, July 17-23, 2016, Proceedings, Part {I}},
    series       = {Lecture Notes in Computer Science},
    volume       = {9779},
    pages        = {361--381},
    publisher    = {Springer},
    year         = {2016},
    url          = {https://doi.org/10.1007/978-3-319-41528-4\_20},
    doi          = {10.1007/978-3-319-41528-4\_20},
    timestamp    = {Sun, 25 Oct 2020 22:32:42 +0100},
    biburl       = {https://dblp.org/rec/conf/cav/LeinoP16.bib},
    bibsource    = {dblp computer science bibliography, https://dblp.org}
}

@article{ZengerIndexedTypes,
    author = {Zenger, Christoph},
    title = {Indexed Types},
    year = {1997},
    issue_date = {Nov. 15, 1997},
    publisher = {Elsevier Science Publishers Ltd.},
    address = {GBR},
    volume = {187},
    number = {1–2},
    issn = {0304-3975},
    url = {https://doi.org/10.1016/S0304-3975(97)00062-5},
    doi = {10.1016/S0304-3975(97)00062-5},
    journal = {Theor. Comput. Sci.},
    month = {nov},
    pages = {147–165},
    numpages = {19},
    keywords = {dependent types, functional languages, constraints, type inference, type system}
}
